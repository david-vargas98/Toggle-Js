// Se usará un tipo de letra diferente a la que se usa por default, será "poppins", se usa @import y entre comillas dobles la dirección de dónde están las fuentes que se quieren usar, en este caso se importa una fuente de google apis
@import "https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700;800;900&display=swap";
// Se le da formato a toda la página con *
* {
  // Se quita margenes
  margin: 0;
  // Se quita rellenos
  padding: 0;
  // Se le dice al navegador tomar en cuenta para cualquier valor que se especifique de borde o de relleno para el ancho o alto de un elemento. Es decir, si se define un elemento con un ancho de 100 pixeles. Esos 100 pixeles incluíran cualquier borde o relleno que se añadan, y la caja de contenido se encogerá para absorber ese ancho extra. Esto típicamente hace mucho más fácil dimensionar elementos.
  // En resumen con border.box todas las medidas que se darán serán exactas.
  box-sizing: border-box;
  // Se agrega la fuente que se ocuipará de la api de google, se añade entre comillas simples y en caso que no encuentre ese tipo de letra, se pone otra.
  font-family: "Poppins", sans-serif;
}
// Se le da formato al cuerpo
body{
    // Se le dice que sea flexible
    display: flex;
    // Se justifica el contenido de izq a der
    justify-content: center;
    // Se alinea los items de arriba y abajo
    align-items: center;
    // Se iguala la altura al 100% de toda la pantalla
    min-height: 100vH;
    // Se establece el color del fondo
    background: #1a242a;
}
// Se le da estilos al contenedor principal
.container{
    position: relative;
    width: 0px;
    height: 0px;
    background: #37444b;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 25px;
    // Se expande y se le da una transición para eso
    transition: 0.5s;
    //Se aagrega un before, que es un decorador que se va mostrar antes de, para dibujar la palanca.
    &::before{
        //Siempre se pide content, se pone nada
        content: '';
        //Como su padre container ya está posicionado como relativo, entonces el decorador lo toma como posición asbsoluta
        position: absolute;
        bottom: -15px;
        width: 40px;
        height: 40px;
        background: #37444b;
        border-radius: 5px;
        opacity: 0;
        transform: rotate(45deg);
        transition: 0.5s;
    }
    // Se le da estilos al hijo qué es content, que contiene el título y el párrafo
    .content{
        min-width: 400px;
        padding: 40px;
        color: #fff;
        opacity: 0;
        transition: 0.5s;
        transform: scale(0);
    }
    // Después de content, se tiene el toggle, se le da estilos para poder ver la palanquita
    .toggleBtn{
        //Se pone posición absoluta, ya que su padre es relativa, así se posiciona de acuerdo al padre
        position: absolute;
        bottom: -20px;
        min-width: 60px;
        height: 60px;
        background: #0bcf9c;
        //Se da el 50 para que sea un circulo
        border-radius: 50%;
        //Cada vez que se pase el cursor será de tipo puntero
        cursor: pointer;
        //Además sus hijos serán flexibles y centrados
        display: flex;
        justify-content: center;
        align-items: center;
        transition: 0.5s;
        //Dentro del toggle se agregsan unos cuantos decoradores
        //Primero el before, que s emostrará antes de.
        &::before{
            content: '+';
            // 1 em equivale a 16px
            font-size: 2.5em;
            color: #fff;
        }
    }
    //Esta clase activa se agrega desde JS, cuando se active, se quiere que en content:
    &.active .content{
        opacity: 1;
        transition-delay: 0.5s;
        transform: scale(1);
    }
    &.active .toggleBtn{
        bottom: -90px;
        transform: rotate(135deg);
        background: #ff5a57;
    }
    &.active{
        &::before{
            opacity: 1;
            transition-delay: 0.5s;
        }
        width: 400px;
        height: 400px;
        transition-delay: 0.5s;
    }
}